version: '3.9'
services:
 kratos-postgresd:
    image: postgres:9.6
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart: always
    environment:
      - POSTGRES_USER=${VACHAN_KRATOS_DB_USER:-kratos}
      - POSTGRES_PASSWORD=${VACHAN_KRATOS_DB_PASSWORD:-secret}
      - POSTGRES_DB=${VACHAN_KRATOS_DB_NAME:-kratos}
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes: 
      - kratos-postgres-vol:/var/lib/postgresql/data
      - kratos-db-backup:/var/backups:rw
    networks:
      - VE-network

 kratos-migrate:
    image: oryd/kratos:v1.0.0
    environment:
      - DSN=${VACHAN_AUTH_DATABASE:-postgres://kratos:secret@kratos-postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4}
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./Kratos_config/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    links:
      - kratos-postgresd
    depends_on:
      - kratos-postgresd
    networks:
      - VE-network

 kratos:
    image: oryd/kratos:v1.0.0
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=${VACHAN_AUTH_DATABASE:-postgres://kratos:secret@kratos-postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4}
      - LOG_LEVEL=trace
      - COURIER_SMTP_CONNECTION_URI=${VACHAN_SUPPORT_EMAIL_CREDS:-smtps://test:test@mailslurper:1025/?skip_ssl_verify=true&legacy_ssl=true}
      - COURIER_SMTP_FROM_ADDRESS=${VACHAN_SUPPORT_EMAIL:-EMAIL_ADDRESS@bridgeconn.com}
      - SERVE_PUBLIC_BASE_URL=http://kratos:4433
    command: serve -c /etc/config/kratos/kratos.yml  --watch-courier
    volumes:
      - type: bind
        source: ./Kratos_config/email-password
        target: /etc/config/kratos
    links:
      - kratos-postgresd
    depends_on:
      - kratos-postgresd
    expose:
      - 4434
      - 4433
    networks:
      - VE-network

 vachan-db:
    image: postgres:16.0
    healthcheck:
     test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
     timeout: 45s
     interval: 10s
     retries: 10
    restart: always
    environment:
     - POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - POSTGRES_DB=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - POSTGRES_HOST_AUTH_METHOD=trust
    logging:
     options:
      max-size: 10m
      max-file: "3"
    expose:
     - 5432
    ports:
     # HOST:CONTAINER
     - "5433:5432"
    networks:
     - VE-network
    volumes:
     # - ${VACHAN_POSTGRES_DATA_DIR:-./pgdata}:/var/lib/postgresql/data
     - vachan-db-vol:/var/lib/postgresql/data
    #  - ../db/csvs:/csvs
    #  - ../db/seed_DB.sql:/docker-entrypoint-initdb.d/seed_DB.sql
     - vachan-db-backup:/var/backups:rw

 #vachan-api app
 vachan-api:
    build:
     context: ../
     dockerfile: ./docker/Dockerfile
    healthcheck:
     timeout: 45s
     interval: 10s
     retries: 10
    environment:
     - VACHAN_POSTGRES_HOST=vachan-db
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_TEST_MODE="False"
     - VACHAN_LOGGING_LEVEL=INFO
     - VACHAN_GITLAB_TOKEN=${VACHAN_GITLAB_TOKEN:-none}
     - VACHAN_REDIS_HOST=redis
     - VACHAN_REDIS_PORT=6379
     - VACHAN_REDIS_PASS=${VACHAN_REDIS_PASS:-vsfrgetd}
     - VACHAN_DOMAIN=${VACHAN_DOMAIN:-http://localhost:8000}
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
     - logs-vol:/app/logs
    restart: always
    links:
     - vachan-db
    expose:
     - 8000
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network

#  vachan-api-test:
#   build:
#    context: ../
#    dockerfile: ./docker/Dockerfile
#   healthcheck:
#    timeout: 45s
#    interval: 10s
#    retries: 10
#   environment:
#    - VACHAN_POSTGRES_HOST=vachan-db
#    - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
#    - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
#    - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
#    - VACHAN_POSTGRES_PORT=5432
#    - VACHAN_KRATOS_PUBLIC_URL=http://kratos:4433/
#    - VACHAN_KRATOS_ADMIN_URL=http://kratos:4434/
#    - VACHAN_SUPER_USERNAME=${VACHAN_SUPER_USERNAME:-super@admin.com}
#    - VACHAN_GITLAB_TOKEN=${VACHAN_GITLAB_TOKEN}
#    - VACHAN_SUPER_PASSWORD=${VACHAN_SUPER_PASSWORD:-Just4Complexity!}
#    - VACHAN_TEST_MODE="False"
#    - VACHAN_LOGGING_LEVEL=INFO
#    - VACHAN_DOMAIN=${VACHAN_DOMAIN:-http://localhost:8000}
#   command: python -m pytest
#   volumes:
#    - logs-test-vol:/app/logs
#   restart: "no"
#   expose:
#    - 8000
#   links:
#    - vachan-db
#    - kratos
#   depends_on:
#    - kratos-postgresd
#    - kratos
#    - vachan-db
#   profiles:
#    - testing
#   networks:
#    - VE-network

 vachan-demos:
    image: vachanengine/vachan-demos:v2.0.0-alpha.13
    expose:
      - 8002
    command: uvicorn main:app --host 0.0.0.0 --port 8002
    restart: always
    environment:
     - VACHAN_DOMAIN=${VACHAN_DOMAIN:-api.vachanengine.org}
     - VACHAN_LOGGING_LEVEL=INFO
    volumes:
     - logs-vol:/app/logs
    depends_on:
     - vachan-api
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network
 
 vachan-cms-rest:
    image: vachanengine/vachan-cms-rest:v2.0.15
    expose:
      - 8005
    command: uvicorn main:app --host 0.0.0.0 --port 8005
    restart: always
    environment:
     - VACHAN_POSTGRES_HOST=vachan-db
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_SCHEMA=vachan_cms_rest
     - VACHAN_LOGGING_LEVEL=INFO
     - VACHAN_DOMAIN=http://vachan-access:8007
     - VACHAN_CMS_DOMAIN=http://vachan-api
    volumes:
     - logs-vol:/app/logs
    depends_on:
     - vachan-db
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network
     
 vachan-tbt:
    image: vachanengine/vachan-tbt:v2.0.2
    expose:
      - 8003
    command: uvicorn main:app --host 0.0.0.0 --port 8003
    restart: always
    environment:
     - VACHAN_POSTGRES_HOST=vachan-db
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_SCHEMA=vachan_tbt
     - VACHAN_LOGGING_LEVEL=INFO
     - VACHAN_DOMAIN=${VACHAN_DOMAIN:-http://localhost}
     - VACHAN_CMS_DOMAIN=http://vachan-api
    volumes:
     - logs-vol:/app/logs
     - vachan-tbt-ml-models-vol:/app/ml-models
    depends_on:
     - vachan-db
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network

 vachan-cms-graphql:
    image: vachanengine/vachan-cms-graphql:v2.0.1
    ports:
      - "8004:8004"
    expose:
      - 8004
    command: uvicorn main:app --host 0.0.0.0 --port 8004
    restart: always
    environment:
     - VACHAN_POSTGRES_HOST=vachan-db
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_DOMAIN=${VACHAN_DOMAIN:-api.vachanengine.org}
     - VACHAN_LOGGING_LEVEL=INFO
    depends_on:
     - vachan-api
     - vachan-db
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network

 kratos-app:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.0.0
    ports:
      - "4443:4433" # public
      - "4444:4434" # admin
    expose:
      - 4443
      - 4444
    restart: unless-stopped
    environment:
      - COURIER_SMTP_CONNECTION_URI=${VACHAN_SUPPORT_EMAIL_CREDS:-smtps://test:test@mailslurper:1025/?skip_ssl_verify=true&legacy_ssl=true}
      - COURIER_SMTP_FROM_ADDRESS=${VACHAN_SUPPORT_EMAIL:-EMAIL_ADDRESS@bridgeconn.com}
      - DSN=${VACHAN_AUTH_DATABASE:-postgres://kratos:secret@kratos-postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4}
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos-app.yml --watch-courier
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./Kratos_config/email-password
        target: /etc/config/kratos
    networks:
      - VE-network

 
 vachan-access:
    image: vachanengine/vachan-access:v2.0.12
    environment:
     - VACHAN_POSTGRES_HOST=vachan-db
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_KRATOS_PUBLIC_URL=${VACHAN_KRATOS_PUBLIC_URL:-http://kratos:4433/}
     - VACHAN_KRATOS_ADMIN_URL=http://kratos:4434/
     - VACHAN_KRATOS_APP_PUBLIC_URL=http://kratos-app:4433/
     - VACHAN_KRATOS_APP_ADMIN_URL=http://kratos-app:4434/
     - VACHAN_SUPER_USERNAME=${VACHAN_SUPER_USERNAME}
     - VACHAN_SUPER_PASSWORD=${VACHAN_SUPER_PASSWORD}
     - VACHAN_TEST_MODE="False"
     - VACHAN_LOGGING_LEVEL=INFO
     - VACHAN_DOMAIN=${VACHAN_DOMAIN:-http://localhost}
     - VACHAN_CMS_DOMAIN=http://vachan-api
    command: uvicorn main:app --host 0.0.0.0 --port 8007
    volumes:
     - logs-vol:/app/logs
    restart: always
    links:
     - vachan-db
     - kratos
     - kratos-app
    depends_on:
     - vachan-db
     - kratos
     - kratos-app
    expose:
     - 8007
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network

 vachan-ai:
    image: vachanengine/vachan-ai:25.1.16-beta
    healthcheck:
     timeout: 45s
     interval: 10s
     retries: 10
    environment:
     - VACHAN_POSTGRES_HOST=${VACHAN_POSTGRES_HOST:-vachan-db}
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_SCHEMA=${VACHAN_POSTGRES_SCHEMA:-aischema}
     - VACHAN_POSTGRES_PORT=5432

     - VACHAN_AI_XLSR_MAX_AUDIO_DURATION=${VACHAN_AI_XLSR_MAX_AUDIO_DURATION:-25}
     - VACHAN_AI_XLSR_SAMPLING_RATE=${VACHAN_AI_XLSR_SAMPLING_RATE:-16000}
     - VACHAN_AI_NLLB_MAX_SRC_CHARS=${VACHAN_AI_NLLB_MAX_SRC_CHARS:-512}
     - VACHAN_AI_NLLB_BATCH_SIZE=${VACHAN_AI_NLLB_BATCH_SIZE:-10}
      
    
     - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI:-http://dov2prodconn.bridgeconn.com:8083}
     - VACHAN_AI_ARTIFACT_PATH=${VACHAN_AI_ARTIFACT_PATH:-models}
     - VACHAN_AI_SERVED_MODEL_URI=${VACHAN_AI_SERVED_MODEL_URI:-http://dov2prodconn.bridgeconn.com:8085}
     - VACHAN_AI_MODEL_SETTINGS_DIR=${VACHAN_AI_MODEL_SETTINGS_DIR:-serving_model}
     - VACHAN_AI_REQUEST_TIMEOUT=${VACHAN_AI_REQUEST_TIMEOUT:-120}

     - VACHAN_AI_S3_BUCKET=${VACHAN_AI_S3_BUCKET}
     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

     - VACHAN_AI_DATA_PATH=${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}
     - VACHAN_AI_LOGGING_LEVEL=INFO
     - VACHAN_AI_OPEN_VOICE_MIN_DURATION=${VACHAN_AI_OPEN_VOICE_MIN_DURATION:-10}
     - VACHAN_LOGGING_LEVEL=INFO
     - VACHAN_AI_ENV=${VACHAN_AI_ENV:-Production}
     - PYTHONPATH=/app/app/core/model_access/ai_model_core.py:/app/app/core/cloud_operations
     - VACHAN_REDIS_PASS=${VACHAN_REDIS_PASS:-vsfrgetd}
     - VACHAN_AI_REDIS_QUE_TIMEOUT=${VACHAN_AI_REDIS_QUE_TIMEOUT:-900}
     - VACHAN_AI_DFNT_SAMPLING_RATE=${VACHAN_AI_DFNT_SAMPLING_RATE:-48000}
     - VACHAN_AI_INA_SAMPLING_RATE=${VACHAN_AI_INA_SAMPLING_RATE:-16000}
     - VACHAN_AI_DELETION_PERIOD=${VACHAN_AI_DELETION_PERIOD:-14}
     - VACHAN_AI_CRON_DAY=${VACHAN_AI_CRON_DAY:-MON}
     - VACHAN_AI_CRON_HOUR=${VACHAN_AI_CRON_HOUR:-12}
     - VACHAN_AI_CRON_MINUTE=${VACHAN_AI_CRON_MINUTE:-30}
     - VACHAN_AI_BASEPATH=/v2/ai
     - VACHAN_USE_VE_AUTH=${VACHAN_USE_VE_AUTH:-True}
     - VACHAN_AI_MLFLOW_DST_PATH=${VACHAN_AI_MLFLOW_DST_PATH:-/var/common/mlflow}
     - VACHAN_DOMAIN=http://vachan-access:8007
     - VACHAN_AI_DOMAIN=${VACHAN_AI_DOMAIN:-https://api.vachanengine.org/}
    command: uvicorn main:app --host 0.0.0.0 --port 8009
    volumes:
     - ${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}/docker-volumes/ai-logs-vol:/app/logs
     - ${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}/cache:/root/.cache
     - ${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}/Downloads:/tmp
     - ${VACHAN_AI_DATA_PATH}/Downloads:${VACHAN_AI_DATA_PATH}/Downloads
    restart: always
    links:
      - redis
      - vachan-db
    depends_on:
     - vachan-db
     - vachan-api
     - redis
    profiles:
     - local-run
     - deployment
    expose:
     - 8009
    ports:
     - "8009:8009"
    networks:
     - VE-network
    container_name: vachan-ai


 worker:
    image: vachanengine/vachan-ai:25.1.16-beta
    healthcheck:
     timeout: 45s
     interval: 10s
     retries: 10 
    environment:
     - REDIS_HOST=redis
     - REDIS_PORT=6379
     - VACHAN_POSTGRES_HOST=${VACHAN_POSTGRES_HOST:-vachan-db}
     - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
     - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
     - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
     - VACHAN_POSTGRES_SCHEMA=${VACHAN_POSTGRES_SCHEMA:-aischema}
     - VACHAN_POSTGRES_PORT=5432
     - VACHAN_AI_REDIS_QUE_TIMEOUT=${VACHAN_AI_REDIS_QUE_TIMEOUT:-900}
     - VACHAN_USE_VE_AUTH=${VACHAN_USE_VE_AUTH:-True}
     - VACHAN_AI_DFNT_SAMPLING_RATE=${VACHAN_AI_DFNT_SAMPLING_RATE:-48000}
     - VACHAN_AI_OPEN_VOICE_MIN_DURATION=${VACHAN_AI_OPEN_VOICE_MIN_DURATION:-10}
     - VACHAN_AI_INA_SAMPLING_RATE=${VACHAN_AI_INA_SAMPLING_RATE:-16000}
     - VACHAN_AI_DATA_PATH=${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}
     - VACHAN_AI_SERVED_MODEL_URI=${VACHAN_AI_SERVED_MODEL_URI:-http://dov2prodconn.bridgeconn.com:8085}
     - VACHAN_AI_REQUEST_TIMEOUT=${VACHAN_AI_REQUEST_TIMEOUT:-120}
     - PYTHONPATH=/app/app/core/model_access/ai_model_core.py:/app/app/core/cloud_operations
     - VACHAN_AI_LOGGING_LEVEL=INFO
     - WORKER_COUNT=${WORKER_COUNT:-4}
    command: rq worker-pool -n ${WORKER_COUNT} --url redis://:${VACHAN_REDIS_PASS}@redis:6379
    links:
      - redis
      - vachan-db
    depends_on:
      - vachan-db
      - redis
      - vachan-api
    volumes:
     - ${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}/docker-volumes/redis_worker-logs-vol:/app/rqlogs
     - ../data/csvs:/csvs
     - ${VACHAN_AI_DATA_PATH:-/home/gitautodeploy/vachan_ai_data}/Downloads:/tmp
    profiles:
     - local-run
     - deployment
    networks:
     - VE-network 
    container_name: redis-worker


 # Web Server
 web-server-local:
    image: nginx:latest
    ports:
     - 80:80
    restart: always
    expose:
     - 80
    depends_on:
     - vachan-api
    volumes:
     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
     - logs-vol:/var/log/nginx/
    profiles:
     - local-run
    networks:
     - VE-network

 web-server-with-cert:
  image: nginx:latest
  ports:
   - 80:80
   - 443:443
  restart: always
  expose:
   - 80
   - 443
  depends_on:
   - vachan-api
  volumes:
   - ./nginx/prod/app.conf.template:/etc/nginx/templates/default.conf.template:ro
   - /home/vachanstaging/ssl:/etc/nginx/ssl:ro
   - logs-vol:/var/log/nginx/
  environment:
    - VACHAN_DOMAIN=${VACHAN_DOMAIN}
  profiles:
   - deployment
  networks:
   - VE-network


 

 #redis caching DB
 redis:
    container_name: redis
    image: "redis:alpine"
    expose:
      - 6379
    volumes:
      # save redisearch data to your current working directory
      - redis-data:/app/data
      # - ./redis_config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server --requirepass ${VACHAN_REDIS_PASS:-vsfrgetd}
    # command: redis-server --bind 172.28.1.4
    # command: redis-server /usr/local/etc/redis/redis.conf
    restart: on-failure
    # links:
    #   - vachan-api
    networks:
     - VE-network

 # redis db visualization dashboard
 redisinsight:
    container_name: redisinsight
    image: redislabs/redisinsight:latest
    ports:
      - '8001:8001'
    volumes:
      # - ./redisinsight:/db
      - redisinsight:/app/db
    profiles:
     - local-run
    networks:
     - VE-network

networks:
   VE-network:

volumes:
  vachan-db-vol:
  logs-vol:
  kratos-sqlite:
  redis-data:
  redisinsight:
  kratos-postgres-vol:
  logs-test-vol:
  vachan-db-backup:
  kratos-db-backup:
  vachan-tbt-ml-models-vol: